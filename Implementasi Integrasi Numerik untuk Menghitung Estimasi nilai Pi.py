# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e4Wgpd15EGJwYXmc7HVQiMQNEyBPulEC
"""

import numpy as np
import time
import matplotlib.pyplot as plt

# Fungsi yang akan diintegrasikan
def f(x):
    return 4 / (1 + x**2)

# Fungsi untuk menghitung integral menggunakan metode Riemann
def riemann_integral(f, a, b, N):
    dx = (b - a) / N
    total = 0
    for i in range(N):
        xi = a + i * dx
        total += f(xi) * dx
    return total

# Nilai referensi pi
pi_reference = 3.14159265358979323846

# Variasi nilai N
N_values = [10, 100, 1000, 10000]

# Inisialisasi list untuk menyimpan hasil
integral_values = []
rms_errors = []
execution_times = []

# Menghitung integral, galat RMS, dan waktu eksekusi
for N in N_values:
    start_time = time.time()
    integral_value = riemann_integral(f, 0, 1, N)
    end_time = time.time()

    rms_error = np.sqrt((integral_value - pi_reference)**2)
    execution_time = end_time - start_time

    integral_values.append(integral_value)
    rms_errors.append(rms_error)
    execution_times.append(execution_time)

    print(f"N = {N}")
    print(f"Nilai integral: {integral_value}")
    print(f"Galat RMS: {rms_error}")
    print(f"Waktu eksekusi: {execution_time:.6f} detik")
    print()

# Membuat grafik hasil perhitungan
plt.figure(figsize=(12, 6))

# Plot untuk galat RMS
plt.subplot(1, 2, 1)
plt.plot(N_values, rms_errors, marker='o')
plt.xscale('log')
plt.yscale('log')
plt.xlabel('Nilai N')
plt.ylabel('Galat RMS')
plt.title('Galat RMS terhadap N')

# Plot untuk waktu eksekusi
plt.subplot(1, 2, 2)
plt.plot(N_values, execution_times, marker='o', color='r')
plt.xscale('log')
plt.xlabel('Nilai N')
plt.ylabel('Waktu Eksekusi (detik)')
plt.title('Waktu Eksekusi terhadap N')

plt.tight_layout()
plt.show()